services:
  postgres:
    image: postgres:latest
    container_name: postgres
    networks:
      - internal_net
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: auth_db
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./init/init-postgresql.sql:/docker-entrypoint-initdb.d/init-postgresql.sql
      - postgres_data:/var/lib/postgresql/data

  cassandra:
    image: scylladb/scylla
    container_name: cassandra
    networks:
      - internal_net
    ports:
      - "127.0.0.1:9042:9042"
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - cassandra_data:/var/lib/cassandra

  redis:
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    image: redis:latest
    networks:
      - internal_net
    container_name: redis
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data

  kafka:
    image: apache/kafka:4.0.1
    container_name: kafka
    networks:
      - internal_net
    ports:
      - "127.0.0.1:9092:9092"
      - "127.0.0.1:9093:9093"
    environment:
      KAFKA_LISTENERS: CLIENT://0.0.0.0:9092,SUBSCRIBER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: CLIENT://kafka:9092,SUBSCRIBER://kafka:9093
      KAFKA_LISTENER_PROTOCOL_MAP: CLIENT:PLAINTEXT,SUBSCRIBER:SSL
      KAFKA_SSL_KEYSTORE_LOCATION: /var/private/ssl/kafka-keystore.p12
      KAFKA_SSL_KEYSTORE_PASSWORD: test1234
      KAFKA_SSL_KEY_PASSWORD: test1234
      KAFKA_SSL_TRUSTSTORE_LOCATION: /var/private/ssl/kafka-truststore.p12
      KAFKA_SSL_TRUSTSTORE_PASSWORD: test1234

    volumes:
      - ./ssl:/var/private/ssl

  auth-service:
    build:
      context: ./auth-service
      args:
        GRADLE_USER_HOME: /root/.gradle-auth
    container_name: auth-service
    image: auth-service
    networks:
      - public_net
      - internal_net
    depends_on:
      postgres: { condition: service_healthy }
      redis: { condition: service_healthy }
    environment:
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: auth_db
      DB_PORT: 5432
      DB_HOST: postgres
      MAIL_HOST: mailhog
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_KEYSTORE_LOCATION: keystore.jks
      JWT_KEYSTORE_PASSWORD: ${JWT_KEYPASSWORD}
      JWT_KEY_PASSWORD: ${JWT_KEYPASSWORD}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_PHONE_NUMBER: ${TWILIO_PHONE_NUMBER}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
    ports:
      - "8081:8081"

  message-service:
    build:
      context: ./message-service
      args:
        GRADLE_USER_HOME: /root/.gradle-message
    container_name: message-service
    image: message-service
    networks:
      - public_net
      - internal_net
    depends_on:
      cassandra: { condition: service_healthy }
      redis: { condition: service_healthy }
    environment:
      CASSANDRA_HOST: cassandra
      CASSANDRA_PORT: 9042
      REDIS_HOST: redis
      JWT_KEYSTORE_LOCATION: keystore.p12
      JWT_KEYSTORE_PASSWORD: ${JWT_KEYPASSWORD}
      JWT_KEY_PASSWORD: ${JWT_KEYPASSWORD}
      REDIS_PORT: 6379
    ports:
      - "8082:8082"

volumes:
  postgres_data:
  redis_data:
  cassandra_data:

networks:
  public_net:
    driver: bridge
  internal_net:
    driver: bridge
    internal: true